/*
  ・関数の仮引数に「プリミティブ型」の実引数を渡した場合、「参照先の値」がコピーされる。
  ・関数の仮引数に「オブジェクト」の実引数を渡した場合、「オブジェクトへの参照」がコピーされる。
*/

// プリミティブ型の引数
let a = 0;

function fn1(arg1) {
  //  内部で「let arg1 = a;」「arg1 = 1;」の処理が起きている。
  //  参照先の値がコピーされるため変数aと仮引数arg1は独立している。
  arg1 = 1;
  console.log(a, arg1); // 仮引数arg1の値のみ変更されるため「0 1」と表示される。
}

fn1(a);

// オブジェクトの引数
let b = {
  prop: 0,
};

function fn2(arg2) {
  //  内部で「let arg2 = b;」「arg2.prop = 1;」の処理が起きている。
  //  オブジェクトへの参照がコピーされるため変数bと仮引数arg2のオブジェクトの実体は同じである。
  arg2.prop = 1;
  console.log(b, arg2); // 仮引数arg2のプロパティ値を変更すると、変数bと仮引数arg2のオブジェクトの実体は同じであるため「{prop: 1} {prop: 1}」と表示される。
}

fn2(b);

function fn3(arg3) {
  //  内部で「let arg3 = b;」「arg3 = {};」の処理が起きている。
  //  オブジェクトへの参照がコピーされるため変数bと仮引数arg3のオブジェクトの実体は同じである。
  arg3 = {};
  console.log(b, arg3); // 仮引数arg3のオブジェクトへの参照先が変わるので「{prop: 0} {}」と表示される。
}

fn3(b);
