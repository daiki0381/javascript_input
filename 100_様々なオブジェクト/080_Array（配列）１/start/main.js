/*
  ・「配列.push」で配列の最後に値を追加する。
  ・「配列.pop」で配列の最後の値を削除する。
  ・「配列.shift」で配列の先頭の値を削除する。
  ・「配列.unshift」で配列の先頭に値を追加する。
  ・「配列.splice」で開始位置 (インデックス番号) から指定した個数分切り取る。
  ・「配列.concat」で配列に配列を結合する。
*/

const array1 = [1, 2, 3, 4, 5];

// 「配列.push」で配列の最後に値を追加する。
//  第1引数に値を設定する。
array1.push(6);
console.log(array1); // 「[1, 2, 3, 4, 5, 6]」が表示される。

// 「配列.pop」で配列の最後の値を削除する。
array1.pop();
console.log(array1); // 「[1, 2, 3, 4, 5]」が表示される。

// 「配列.shift」で配列の先頭の値を削除する。
array1.shift();
console.log(array1); // 「[2, 3, 4, 5]」が表示される。

// 「配列.unshift」で配列の先頭に値を追加する。
//  第1引数に値を設定する。
array1.unshift(1);
console.log(array1); // 「[1, 2, 3, 4, 5]」が表示される。

// 「配列.splice」で開始位置 (インデックス番号) から指定した個数分切り取る。
//  第1引数に開始位置 (インデックス番号) を設定する。
//  第2引数に切り取る個数。
//  第3引数以降は切り取られた箇所に代入する値。
array1.splice(0, 2, 1, 2);
console.log(array1); // 「[1, 2, 3, 4, 5]」が表示される。

// 「配列.concat」で配列に配列を結合する。
//  第1引数に結合したい配列を設定する。
const array2 = array1.concat([6, 7, 8, 9, 10]);
console.log(array2); // 「[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]」が表示される。

//  スプレッド演算子を用いた場合、下記のように記述可能。
const array3 = [...array1, 6, 7, 8, 9, 10];
console.log(array3); // 「[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]」が表示される。
