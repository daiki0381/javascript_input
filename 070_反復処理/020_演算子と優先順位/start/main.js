/*
  ・オペランド (演算の対象となる値) を元に処理を行い、結果を返す記号を「演算子」という。
  ・=演算子は右辺を結果として返す。
  ・=演算子は右辺から左辺を代入する。
*/

//  ①「1 + 2」が実行される。(+の優先順位は12)
//  ②「a = 3」が実行される。(=の優先順位は2)
let a = 1 + 2;
console.log(a); // 「3」が表示される。

//  ①「2 * 3」が実行される。(*の優先順位は13)
//  ②「1 + 6」が実行される。(+の優先順位は12)
//  ③「b = 7」が実行される。(=の優先順位は2)
let b = 1 + 2 * 3;
console.log(b); // 「7」が表示される。

//  ①「(1 + 2)」が実行される。(グループ化の優先順位は19)
//  ②「3 * 3」が実行される。(*の優先順位は13)
//  ③「c = 9」が実行される。(= 演算子の優先順位は2)
let c = (1 + 2) * 3;
console.log(c); // 「9」が表示される。

let d = 0;
//  後置インクリメントの場合、オペランド (d) を返した後に+1をする。
let e = d++;
console.log(e, d); // 「0 1」が表示される。

/* 後置インクリメントの内部構造
  let d = 0;
  let e;
   =演算子は右辺を結果として返す。
   =演算子は右辺から左辺を代入する。
  d = (e = d) + 1;
*/

let f = 0;
//  前置インクリメントの場合、+1をした後にオペランド (d) を返す。
let g = ++f;
console.log(f, g); // 「1 1」が表示される。

/* 前置インクリメントの内部構造
  let f = 0;
  let g;
   =演算子は右辺から左辺を代入する。
  f = g = f + 1;
*/

let h = 0;
//  ①「!h」が実行される。(!の優先順位は15)
//  ②「true * 5」が実行される。(*の優先順位は13)
// 「true * 5」の「true」は暗黙的に「1」に変換される。
let i = !h * 5;
console.log(i); // 「5」が表示される。

function fn1() {
  let a = 0;
  //  後置インクリメントの場合、オペランド (a) を返した後に+1をする。
  return a++;
}
console.log(fn1()); // 「0」が表示される。

function fn2() {
  let a = 0;
  //  前置インクリメントの場合、+1をした後にオペランド (a) を返す。
  return ++a;
}
console.log(fn2()); // 「1」が表示される。
